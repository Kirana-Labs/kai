name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build standalone binary
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            bun build index.ts --compile --target=bun-darwin-arm64 --outfile kai-${{ matrix.platform }}-${{ matrix.arch }}
          else
            bun build index.ts --compile --outfile kai-${{ matrix.platform }}-${{ matrix.arch }}
          fi

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: kai-${{ matrix.platform }}-${{ matrix.arch }}
          path: kai-${{ matrix.platform }}-${{ matrix.arch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Move binaries to release directory
        run: |
          mkdir -p release
          find ./artifacts -type f -name 'kai-*' -exec mv {} release/ \;
          chmod +x release/*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
